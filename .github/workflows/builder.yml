name: musl-cross-builder

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu2204]
        arch_type:
          [
            x86_64-linux-musl,
          ]

    name: ${{ matrix.arch_type }}-${{ matrix.os }}

    steps:
      # 检出builder
      - name: Checkout
        uses: actions/checkout@v3

      - name: checkout musl-cross-make
        uses: actions/checkout@v3
        with:
          repository: richfelker/musl-cross-make
          path: musl-cross-make
          submodules: recursive

      # 复制config.mak
      - name: Copy updated config.mak to build directory
        run: |
          cp config.mak musl-cross-make/config.mak

      # 编译 & install
      - name: make & install ${{ matrix.arch_type }} toolchain
        run: |
          cd musl-cross-make
          make -j$(nproc) install TARGET=${{ matrix.arch_type }} OUTPUT=~/install/${{ matrix.arch_type }}

      # 7z压缩
      - name: archive ${{ matrix.arch_type }} toolchain
        run: 7z a ${{ matrix.arch_type }}.7z ~/install/${{ matrix.arch_type }}/

      - name: set release info dynamically from config.mak
        run: printf "%s\n" "$(sed -rn "/GCC_VER = (.*)/,/MPFR_VER = (.*)/p" config.mak)" > release.md

      # 上传artifact
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch_type }}
          path: ${{ matrix.arch_type }}.7z

      # 创建release
      - name: create-release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: release.md
          draft: false
          prerelease: false

      - name: upload-release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PKG_NAME: ${{ matrix.arch_type }}-${{ matrix.os }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ matrix.arch_type }}.7z
          asset_name: ${{ matrix.arch_type }}.7z
          asset_content_type: application/x-7z-compressed